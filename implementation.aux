\relax 
\providecommand\hyper@newdestlabel[2]{}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {chapter}{\numberline {2}Implementation}{19}{chapter.2}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\defcounter {refsection}{0}\relax }\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{cha:implementation}{{2}{19}{Implementation}{chapter.2}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {2.1}Project Scope}{19}{section.2.1}}
\newlabel{sec:implementation-scope}{{2.1}{19}{Project Scope}{section.2.1}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {2.2}Technologies}{19}{section.2.2}}
\newlabel{sec:implementation-technologies}{{2.2}{19}{Technologies}{section.2.2}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.1}ECMAScript2015 and Babel}{20}{subsection.2.2.1}}
\newlabel{sec:implementation-technologies-es6}{{2.2.1}{20}{ECMAScript2015 and Babel}{subsection.2.2.1}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.2}Reactive Programming}{21}{subsection.2.2.2}}
\newlabel{sec:implementation-technologies-rxjs}{{2.2.2}{21}{Reactive Programming}{subsection.2.2.2}{}}
\@writefile{lop}{\defcounter {refsection}{0}\relax }\@writefile{lop}{\contentsline {program}{\numberline {2.1}{\ignorespaces \emph  {Callback Hell} -- Nested callbacks in JavaScript. Simplified method taken from a previous project, which authenticates a user, creates a new google calendar for them and then saves the user to one\'s own database, to then redirect them. \texttt  {\{...\}} is used to shorten the code, error-handling was also omitted in the example for simplicity.\relax }}{22}{program.2.1}}
\newlabel{prog:implementation-technologies-rxjs-callback-hell}{{2.1}{22}{\emph {Callback Hell} -- Nested callbacks in JavaScript. Simplified method taken from a previous project, which authenticates a user, creates a new google calendar for them and then saves the user to one\'s own database, to then redirect them. \texttt {\{...\}} is used to shorten the code, error-handling was also omitted in the example for simplicity.\relax }{program.2.1}{}}
\@writefile{lop}{\defcounter {refsection}{0}\relax }\@writefile{lop}{\contentsline {program}{\numberline {2.2}{\ignorespaces \emph  {Promises} -- Simple example of chaining ECMAScript 2015 promises with \texttt  {then} and \texttt  {catch}.\relax }}{22}{program.2.2}}
\newlabel{prog:implementation-technologies-rxjs-promises}{{2.2}{22}{\emph {Promises} -- Simple example of chaining ECMAScript 2015 promises with \texttt {then} and \texttt {catch}.\relax }{program.2.2}{}}
\@writefile{lop}{\defcounter {refsection}{0}\relax }\@writefile{lop}{\contentsline {program}{\numberline {2.3}{\ignorespaces \emph  {RxJS} -- simplified example of the touch controls used to swipe to the next or previous slide. An Observable is created from the browser's \texttt  {touchmove} event and is then transformed with \texttt  {map} and \texttt  {filter}, to in the end call the \texttt  {navigate()} method with the direction the user swiped into.\relax }}{23}{program.2.3}}
\newlabel{prog:implementation-technologies-rxjs}{{2.3}{23}{\emph {RxJS} -- simplified example of the touch controls used to swipe to the next or previous slide. An Observable is created from the browser's \texttt {touchmove} event and is then transformed with \texttt {map} and \texttt {filter}, to in the end call the \texttt {navigate()} method with the direction the user swiped into.\relax }{program.2.3}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.3}React}{24}{subsection.2.2.3}}
\newlabel{sec:implementation-technologies-react}{{2.2.3}{24}{React}{subsection.2.2.3}{}}
\@writefile{lop}{\defcounter {refsection}{0}\relax }\@writefile{lop}{\contentsline {program}{\numberline {2.4}{\ignorespaces Nested React components. In this example, a 1-slide-long presentation is created.\relax }}{26}{program.2.4}}
\newlabel{prog:implementation-technologies-react}{{2.4}{26}{Nested React components. In this example, a 1-slide-long presentation is created.\relax }{program.2.4}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {2.1}{\ignorespaces Screenshot of an example slide with unveil.js.\relax }}{26}{figure.caption.14}}
\newlabel{fig:implementation-technologies-unveil-screenshots}{{2.1}{26}{Screenshot of an example slide with unveil.js.\relax }{figure.caption.14}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.4}unveil.js}{26}{subsection.2.2.4}}
\newlabel{sec:implementation-technologies-unveil}{{2.2.4}{26}{unveil.js}{subsection.2.2.4}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {2.3}Project Structure}{27}{section.2.3}}
\newlabel{sec:implementation-structure}{{2.3}{27}{Project Structure}{section.2.3}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {2.2}{\ignorespaces Navigation pipeline from user's key press to re-render of the presentation. The monospaced text next to the arrows symbolises the data transmitted. \texttt  {KeyControls} listen for key events and process them, to then send a navigation request to go \emph  {right} to the \texttt  {Navigator}. This component then maps the direction to the next slide's indices ($1$). \texttt  {UnveilApp} then adds other information necessary for the \texttt  {Router}, which then is responsible for updating the browser history, mapping the indices back to a human readable url and sending out a new router event. In the end \texttt  {UnveilApp} receives this event and re-renders the presentation.\relax }}{28}{figure.caption.15}}
\newlabel{fig:implementation-technologies-unveil-navigation}{{2.2}{28}{Navigation pipeline from user's key press to re-render of the presentation. The monospaced text next to the arrows symbolises the data transmitted. \texttt {KeyControls} listen for key events and process them, to then send a navigation request to go \emph {right} to the \texttt {Navigator}. This component then maps the direction to the next slide's indices ($1$). \texttt {UnveilApp} then adds other information necessary for the \texttt {Router}, which then is responsible for updating the browser history, mapping the indices back to a human readable url and sending out a new router event. In the end \texttt {UnveilApp} receives this event and re-renders the presentation.\relax }{figure.caption.15}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{Extended unveil.js:}{28}{section.2.3}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{Network Synchronisation Layer:}{28}{section.2.3}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{Interactive Extension:}{28}{section.2.3}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{Server and Example Presentation:}{29}{section.2.3}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {2.4}Extended unveil.js}{29}{section.2.4}}
\newlabel{sec:implementation-unveil}{{2.4}{29}{Extended unveil.js}{section.2.4}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {2.3}{\ignorespaces Overview over the render-flow of the application in the extended version of unveil.js. \texttt  {UnveilApp} renders the presenter, which then takes care of rendering the (current) slide and all controls.\relax }}{30}{figure.caption.16}}
\newlabel{fig:implementation-unveil-render-pipeline}{{2.3}{30}{Overview over the render-flow of the application in the extended version of unveil.js. \texttt {UnveilApp} renders the presenter, which then takes care of rendering the (current) slide and all controls.\relax }{figure.caption.16}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {2.5}Network Synchronisation Layer}{30}{section.2.5}}
\newlabel{sec:implementation-network-sync}{{2.5}{30}{Network Synchronisation Layer}{section.2.5}{}}
\@writefile{lop}{\defcounter {refsection}{0}\relax }\@writefile{lop}{\contentsline {program}{\numberline {2.5}{\ignorespaces Shortened version of \texttt  {NavigationReceiver}. First the inherited context properties are set up, then an observable waiting for \texttt  {state:change} events from the socket is created. If the incoming request is not the currently displayed slide, the navigator will be pushed a new value.\relax }}{31}{program.2.5}}
\newlabel{prog:implementation-network-sync-navigation-receiver}{{2.5}{31}{Shortened version of \texttt {NavigationReceiver}. First the inherited context properties are set up, then an observable waiting for \texttt {state:change} events from the socket is created. If the incoming request is not the currently displayed slide, the navigator will be pushed a new value.\relax }{program.2.5}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {2.6}Interactive Extension}{32}{section.2.6}}
\newlabel{sec:implementation-interactive}{{2.6}{32}{Interactive Extension}{section.2.6}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {2.6.1}Speaker Presenter}{32}{subsection.2.6.1}}
\newlabel{sec:implementation-interactive-speaker-presenter}{{2.6.1}{32}{Speaker Presenter}{subsection.2.6.1}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {2.6.2}Media}{32}{subsection.2.6.2}}
\newlabel{sec:implementation-interactive-media}{{2.6.2}{32}{Media}{subsection.2.6.2}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {2.4}{\ignorespaces Screenshot of the speaker presenter with the current main slide, the upcoming slide to the right, available actions (muting and adding votings) and speaker notes.\relax }}{33}{figure.caption.17}}
\newlabel{fig:implementation-interactive-speaker-presenter}{{2.4}{33}{Screenshot of the speaker presenter with the current main slide, the upcoming slide to the right, available actions (muting and adding votings) and speaker notes.\relax }{figure.caption.17}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {2.5}{\ignorespaces Mobile view of a presentation slide in (a) default mode and (b) speaker mode as well as (c) voting view before voting and (d) voting view after voting. Mind the share button in the left upper corner in (a) as well as the buttons to mute content requests and create votings in (b).\relax }}{33}{figure.caption.18}}
\newlabel{fig:implementation-interactive-mobile}{{2.5}{33}{Mobile view of a presentation slide in (a) default mode and (b) speaker mode as well as (c) voting view before voting and (d) voting view after voting. Mind the share button in the left upper corner in (a) as well as the buttons to mute content requests and create votings in (b).\relax }{figure.caption.18}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {2.6}{\ignorespaces Screenshots of sharing content. (a) media sender on mobile phone shares youtube link (b) speaker receives content request.\relax }}{34}{figure.caption.19}}
\newlabel{fig:implementation-interactive-media}{{2.6}{34}{Screenshots of sharing content. (a) media sender on mobile phone shares youtube link (b) speaker receives content request.\relax }{figure.caption.19}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {2.6.3}Voting}{34}{subsection.2.6.3}}
\newlabel{sec:implementation-interactive-voting}{{2.6.3}{34}{Voting}{subsection.2.6.3}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {2.7}{\ignorespaces Flow of adding content, monospaced text symbolises type and name of events. First the \texttt  {MediaSender} of the default mode sends a request, which the speaker mode's \texttt  {MediaAcceptor} listens to. If the request is accepted by the speaker or requests are muted, another socket event is broadcast, which the \texttt  {MediaReceiver} waits for. This component is enabled in all modes and emits the state subject event to add a new slide, which \texttt  {UnveilApp} reacts to.\relax }}{35}{figure.caption.20}}
\newlabel{fig:implementation-interactive-media-pipeline}{{2.7}{35}{Flow of adding content, monospaced text symbolises type and name of events. First the \texttt {MediaSender} of the default mode sends a request, which the speaker mode's \texttt {MediaAcceptor} listens to. If the request is accepted by the speaker or requests are muted, another socket event is broadcast, which the \texttt {MediaReceiver} waits for. This component is enabled in all modes and emits the state subject event to add a new slide, which \texttt {UnveilApp} reacts to.\relax }{figure.caption.20}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {2.8}{\ignorespaces Screenshot of the desktop speaker mode, creating a new voting, on-the-fly, during a presentation.\relax }}{35}{figure.caption.21}}
\newlabel{fig:implementation-interactive-voting}{{2.8}{35}{Screenshot of the desktop speaker mode, creating a new voting, on-the-fly, during a presentation.\relax }{figure.caption.21}{}}
\@writefile{lop}{\defcounter {refsection}{0}\relax }\@writefile{lop}{\contentsline {program}{\numberline {2.6}{\ignorespaces Example code for preparing a slide with voting.\relax }}{36}{program.2.6}}
\newlabel{prog:implementation-interactive-structure}{{2.6}{36}{Example code for preparing a slide with voting.\relax }{program.2.6}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {2.7}Server}{36}{section.2.7}}
\newlabel{sec:implementation-server}{{2.7}{36}{Server}{section.2.7}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {2.8}Example Application}{36}{section.2.8}}
\newlabel{sec:implementation-client}{{2.8}{36}{Example Application}{section.2.8}{}}
\@setckpt{implementation}{
\setcounter{page}{37}
\setcounter{equation}{0}
\setcounter{enumi}{0}
\setcounter{enumii}{0}
\setcounter{enumiii}{0}
\setcounter{enumiv}{0}
\setcounter{footnote}{19}
\setcounter{mpfootnote}{0}
\setcounter{part}{0}
\setcounter{chapter}{2}
\setcounter{section}{8}
\setcounter{subsection}{0}
\setcounter{subsubsection}{0}
\setcounter{paragraph}{0}
\setcounter{subparagraph}{0}
\setcounter{figure}{8}
\setcounter{table}{0}
\setcounter{Item}{0}
\setcounter{Hfootnote}{38}
\setcounter{bookmark@seq@number}{36}
\setcounter{parentequation}{0}
\setcounter{float@type}{32}
\setcounter{ContinuedFloat}{0}
\setcounter{algorithm}{0}
\setcounter{ALG@line}{0}
\setcounter{ALG@rem}{0}
\setcounter{ALG@nested}{0}
\setcounter{ALG@Lnr}{2}
\setcounter{ALG@blocknr}{10}
\setcounter{ALG@storecount}{0}
\setcounter{ALG@tmpcounter}{0}
\setcounter{program}{6}
\setcounter{@abgabetag}{27}
\setcounter{@abgabemonat}{6}
\setcounter{@abgabejahr}{2016}
\setcounter{lstnumber}{6}
\setcounter{tabx@nest}{0}
\setcounter{listtotal}{0}
\setcounter{listcount}{0}
\setcounter{liststart}{0}
\setcounter{liststop}{0}
\setcounter{citecount}{0}
\setcounter{citetotal}{0}
\setcounter{multicitecount}{0}
\setcounter{multicitetotal}{0}
\setcounter{instcount}{0}
\setcounter{maxnames}{3}
\setcounter{minnames}{1}
\setcounter{maxitems}{3}
\setcounter{minitems}{1}
\setcounter{citecounter}{0}
\setcounter{savedcitecounter}{0}
\setcounter{uniquelist}{0}
\setcounter{uniquename}{0}
\setcounter{refsection}{0}
\setcounter{refsegment}{0}
\setcounter{maxextratitle}{0}
\setcounter{maxextratitleyear}{0}
\setcounter{maxextrayear}{0}
\setcounter{maxextraalpha}{0}
\setcounter{abbrvpenalty}{50}
\setcounter{highnamepenalty}{50}
\setcounter{lownamepenalty}{25}
\setcounter{maxparens}{3}
\setcounter{parenlevel}{0}
\setcounter{mincomprange}{10}
\setcounter{maxcomprange}{100000}
\setcounter{mincompwidth}{1}
\setcounter{afterword}{0}
\setcounter{savedafterword}{0}
\setcounter{annotator}{0}
\setcounter{savedannotator}{0}
\setcounter{author}{0}
\setcounter{savedauthor}{0}
\setcounter{bookauthor}{0}
\setcounter{savedbookauthor}{0}
\setcounter{commentator}{0}
\setcounter{savedcommentator}{0}
\setcounter{editor}{0}
\setcounter{savededitor}{0}
\setcounter{editora}{0}
\setcounter{savededitora}{0}
\setcounter{editorb}{0}
\setcounter{savededitorb}{0}
\setcounter{editorc}{0}
\setcounter{savededitorc}{0}
\setcounter{foreword}{0}
\setcounter{savedforeword}{0}
\setcounter{holder}{0}
\setcounter{savedholder}{0}
\setcounter{introduction}{0}
\setcounter{savedintroduction}{0}
\setcounter{namea}{0}
\setcounter{savednamea}{0}
\setcounter{nameb}{0}
\setcounter{savednameb}{0}
\setcounter{namec}{0}
\setcounter{savednamec}{0}
\setcounter{translator}{0}
\setcounter{savedtranslator}{0}
\setcounter{shortauthor}{0}
\setcounter{savedshortauthor}{0}
\setcounter{shorteditor}{0}
\setcounter{savedshorteditor}{0}
\setcounter{labelname}{0}
\setcounter{savedlabelname}{0}
\setcounter{institution}{0}
\setcounter{savedinstitution}{0}
\setcounter{lista}{0}
\setcounter{savedlista}{0}
\setcounter{listb}{0}
\setcounter{savedlistb}{0}
\setcounter{listc}{0}
\setcounter{savedlistc}{0}
\setcounter{listd}{0}
\setcounter{savedlistd}{0}
\setcounter{liste}{0}
\setcounter{savedliste}{0}
\setcounter{listf}{0}
\setcounter{savedlistf}{0}
\setcounter{location}{0}
\setcounter{savedlocation}{0}
\setcounter{organization}{0}
\setcounter{savedorganization}{0}
\setcounter{origlocation}{0}
\setcounter{savedoriglocation}{0}
\setcounter{origpublisher}{0}
\setcounter{savedorigpublisher}{0}
\setcounter{publisher}{0}
\setcounter{savedpublisher}{0}
\setcounter{language}{0}
\setcounter{savedlanguage}{0}
\setcounter{pageref}{0}
\setcounter{savedpageref}{0}
\setcounter{textcitecount}{0}
\setcounter{textcitetotal}{0}
\setcounter{textcitemaxnames}{0}
\setcounter{biburlnumpenalty}{0}
\setcounter{biburlucpenalty}{0}
\setcounter{biburllcpenalty}{0}
\setcounter{smartand}{1}
\setcounter{bbx:relatedcount}{0}
\setcounter{bbx:relatedtotal}{0}
\setcounter{cbx@tempcnta}{0}
\setcounter{cbx@tempcntb}{0}
\setcounter{section@level}{0}
\setcounter{lstlisting}{0}
}
